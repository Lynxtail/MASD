# Частные и множественные коэффициенты корреляции
import numpy as np
import pingouin as pg
import pandas as pd
import scipy.stats as stats
from math import sqrt, tanh, atanh

def c_inter(r_, n):
    u = stats.norm.ppf(0.975)
    z1 = atanh(r_) - (u / sqrt(n - 5)) - (r_ / (2 * (n - 3)))
    z2 = atanh(r_) + (u / sqrt(n - 5)) - (r_ / (2 * (n - 3)))
    return z1, z2

n = 14
y = [40, 45, 55, 60, 70, 65, 65, 75, 75, 80, 100, 90, 95, 85]
x1 = [9, 8, 8, 7, 6, 6, 8, 5, 5, 5, 3, 4, 3, 4]
x2 = [400, 500, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800]
data = {'y': y,
        'x1': x1,
        'x2': x2,
        }
alpha = 0.05

# С помощью библиотеки
data = pd.DataFrame(data, columns=['y', 'x1', 'x2'])
print(data)
print(f"Частные коэффициенты корреляции (с помощью pingouin):\n"\
    f"r_12 = {pg.partial_corr(data, 'y', 'x1', 'x2')}\n"\
    f"r_21 = {pg.partial_corr(data, 'y', 'x2', 'x1')}")


# С помощью формул
r_y1, c = np.corrcoef(y, x1)
r_y2, c = np.corrcoef(y, x2)
r_12, c = np.corrcoef(x1, x2)
r_y12 = (r_y1[1] - r_y2[1] * r_12[1]) / sqrt((1 - r_y2[1]**2) * (1 - r_12[1]**2))
r_y21 = (r_y2[1] - r_y1[1] * r_12[1]) / sqrt((1 - r_y1[1]**2) * (1 - r_12[1]**2))
print(f'\nЧастные коэффициенты корреляции (с помощью формул):\n'\
    f'r_y1,2 = {r_y12}\tr_y2,1 = {r_y21}\n')

# проверка гипотез
if abs((r_y12 * sqrt(n - 2)) / sqrt(1 - r_y12 ** 2)) < stats.t.ppf(0.95, n-2):
    print('Гипотеза об отсутствии корреляционной связи r_y12 принимается\n')
else:
    print('Гипотеза об отсутствии корреляционной связи r_y12 отвергается\n')
if abs((r_y21 * sqrt(n - 2)) / sqrt(1 - r_y12 ** 2)) < stats.t.ppf(0.95, n-2):
    print('Гипотеза об отсутствии корреляционной связи r_y21 принимается\n')
else:
    print('Гипотеза об отсутствии корреляционной связи r_y21 отвергается\n')

# Построение доверительных интервалов
z1, z2 = c_inter(r_y12, n)
print(f'Доверительный интервал (для r_y1,2): {tanh(z1)} < r < {tanh(z2)}')
z1, z2 = c_inter(r_y21, n)
print(f'Доверительный интервал (для r_y2,1): {tanh(z1)} < r < {tanh(z2)}')

# из библиотеки!!
# Множественный коэффициент корреляции
R_y12 = sqrt(1 - (1 - r_y1[1]**2) * (1 - r_y21))
print(f'Множественный коэффициент корреляции: {R_y12}')
print(f'Множественный коэффициент детерминации: {R_y12**2}')